
// Add git ignore look into it.

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id "kotlin-parcelize"
    id "androidx.navigation.safeargs.kotlin"
    id "com.google.dagger.hilt.android"

}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.call_mapbox_api"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    // Allow references to generated code Hilt.
    kapt {
        correctErrorTypes = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    def nav_version = "2.5.3"
    def room_version = "2.4.3"
    def jUnitVersion = "4.9"
    def androidXTestVersion = "1.5.0"
    def mockitoVersion = "4.11.0"
    def mockitoKotlinVersion = "3.2.0"
    def coroutines_version = "1.6.4"
    def hamcrestVersion = "1.3"



    // Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.room:room-paging:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")

    // Kotlin Fragment with SafeArg
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    /// Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // Viewmodel and livedata
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Dagger - Hilt
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // moshi for parsing the JSON format
    def moshi_version = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Cardview
    implementation "androidx.cardview:cardview:1.0.0"

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0")

    // UNIT test
    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$jUnitVersion"
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:$androidXTestVersion"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    // Optional -- Mockk framework
    // Mock web server
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    // Google truth for assertion
    testImplementation "com.google.truth:truth:1.1.3"
    // Coroutine
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // Other dependencies
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    // Mock final Class no interface
    testImplementation 'org.mockito:mockito-inline:4.0.0'




}
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}