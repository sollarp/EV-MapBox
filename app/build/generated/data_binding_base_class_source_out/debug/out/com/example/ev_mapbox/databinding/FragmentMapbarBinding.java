// Generated by view binder compiler. Do not edit!
package com.example.ev_mapbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ev_mapbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapbarBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ConstraintLayout conlayout;

  @NonNull
  public final CoordinatorLayout containerMapBar;

  @NonNull
  public final ItemMapBinding mapFragment;

  @NonNull
  public final LayoutSearchbarBinding searchbarLayout;

  @NonNull
  public final LayoutToolbarBinding toolbarLayout;

  private FragmentMapbarBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ConstraintLayout conlayout, @NonNull CoordinatorLayout containerMapBar,
      @NonNull ItemMapBinding mapFragment, @NonNull LayoutSearchbarBinding searchbarLayout,
      @NonNull LayoutToolbarBinding toolbarLayout) {
    this.rootView = rootView;
    this.conlayout = conlayout;
    this.containerMapBar = containerMapBar;
    this.mapFragment = mapFragment;
    this.searchbarLayout = searchbarLayout;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mapbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.conlayout;
      ConstraintLayout conlayout = ViewBindings.findChildViewById(rootView, id);
      if (conlayout == null) {
        break missingId;
      }

      CoordinatorLayout containerMapBar = (CoordinatorLayout) rootView;

      id = R.id.map_fragment;
      View mapFragment = ViewBindings.findChildViewById(rootView, id);
      if (mapFragment == null) {
        break missingId;
      }
      ItemMapBinding binding_mapFragment = ItemMapBinding.bind(mapFragment);

      id = R.id.searchbar_layout;
      View searchbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchbarLayout == null) {
        break missingId;
      }
      LayoutSearchbarBinding binding_searchbarLayout = LayoutSearchbarBinding.bind(searchbarLayout);

      id = R.id.toolbar_layout;
      View toolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLayout == null) {
        break missingId;
      }
      LayoutToolbarBinding binding_toolbarLayout = LayoutToolbarBinding.bind(toolbarLayout);

      return new FragmentMapbarBinding((CoordinatorLayout) rootView, conlayout, containerMapBar,
          binding_mapFragment, binding_searchbarLayout, binding_toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
