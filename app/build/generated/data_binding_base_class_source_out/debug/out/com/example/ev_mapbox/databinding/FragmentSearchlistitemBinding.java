// Generated by view binder compiler. Do not edit!
package com.example.ev_mapbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ev_mapbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchlistitemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonGo;

  @NonNull
  public final TextView distanceText;

  @NonNull
  public final TextView listView;

  private FragmentSearchlistitemBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonGo, @NonNull TextView distanceText, @NonNull TextView listView) {
    this.rootView = rootView;
    this.buttonGo = buttonGo;
    this.distanceText = distanceText;
    this.listView = listView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchlistitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchlistitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_searchlistitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchlistitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_go;
      Button buttonGo = ViewBindings.findChildViewById(rootView, id);
      if (buttonGo == null) {
        break missingId;
      }

      id = R.id.distance_text;
      TextView distanceText = ViewBindings.findChildViewById(rootView, id);
      if (distanceText == null) {
        break missingId;
      }

      id = R.id.list_view;
      TextView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      return new FragmentSearchlistitemBinding((ConstraintLayout) rootView, buttonGo, distanceText,
          listView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
